diff --git a/mount.cifs.8 b/mount.cifs.8
index daff4fe..ab38360 100644
--- a/mount.cifs.8
+++ b/mount.cifs.8
@@ -316,7 +316,7 @@ krb5 Use Kerberos version 5 authentication
 .sp -1
 .IP \(bu 2.3
 .\}
-krb5i Use Kerberos authentication and packet signing
+krb5i Use Kerberos authentication and forcibly enable packet signing
 .RE
 .sp
 .RS 4
@@ -338,7 +338,7 @@ ntlm Use NTLM password hashing (default)
 .sp -1
 .IP \(bu 2.3
 .\}
-ntlmi Use NTLM password hashing with signing (if /proc/fs/cifs/PacketSigningEnabled on or if server requires signing also can be the default)
+ntlmi Use NTLM password hashing and force packet signing
 .RE
 .sp
 .RS 4
@@ -360,10 +360,32 @@ ntlmv2 Use NTLMv2 password hashing
 .sp -1
 .IP \(bu 2.3
 .\}
-ntlmv2i Use NTLMv2 password hashing with packet signing
+ntlmv2i Use NTLMv2 password hashing and force packet signing
+.RE
+.sp
+.RS 4
+.ie n \{\
+\h'-04'\(bu\h'+03'\c
+.\}
+.el \{\
+.sp -1
+.IP \(bu 2.3
+.\}
+ntlmssp Use NTLMv2 password hashing encapsulated in Raw NTLMSSP message
+.RE
 .sp
+.RS 4
+.ie n \{\
+\h'-04'\(bu\h'+03'\c
+.\}
+.el \{\
+.sp -1
+.IP \(bu 2.3
+.\}
+ntlmsspi Use NTLMv2 password hashing encapsulated in Raw NTLMSSP message, and force packet signing
 .RE
-[NB This [sec parameter] is under development and expected to be available in cifs kernel module 1\&.40 and later]
+.sp
+If the server requires signing during protocol negotiation, then it may be enabled automatically. Packet signing may also be enabled automatically if it's enabled in /proc/fs/cifs/SecurityFlags.
 .RE
 .PP
 nobrl
@@ -411,7 +433,10 @@ default network read size (usually 16K)\&. The client currently can not use rsiz
 .PP
 wsize=\fIbytes\fR
 .RS 4
-Maximum amount of data that the kernel will send in a write request in bytes\&. Prior to RHEL6\&.2 kernels, the default and maximum was 57344 (14 * 4096 pages)\&. As of RHEL6\&.2, the default is 1M, and the maximum allowed is 16M\&. Note that this value is just a starting point for negotiation. The client and server may negotiate this size downward according to the server's capabilities\&.
+Maximum amount of data that the kernel will send in a write request in bytes\&. Prior to RHEL6\&.2 kernels, the default and maximum was 57344 (14 * 4096 pages)\&. As of RHEL6\&.2, the default depends on whether the client and server negotiate large writes via POSIX extensions. If they do then the default is 1M, and the maximum allowed is 16M\&. If they do not, then the default is 65536 and the
+maximum allowed is 131007.
+.PP
+Note that this value is just a starting point for negotiation. The client and server may negotiate this size downward according to the server's capabilities\&.
 .RE
 .PP
 fsc
@@ -460,6 +485,11 @@ posixpaths
 Inverse of \fInoposixpaths\fR.
 .RE
 .PP
+prefixpath=
+.RS 4
+It's possible to mount a subdirectory of a share. The preferred way to do this is to append the path to the UNC when mounting. However, it's also possible to do the same by setting this option and providing the path there.
+.RE
+.PP
 \-\-verbose
 .RS 4
 Print additional debugging information for the mount\&. Note that this parameter must be specified before the \-o\&. For example:
